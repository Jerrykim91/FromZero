# Python
- 대화형 언어 사고방식이 비슷해서 인간적인 언어라고 해야하나? 덕분에 공동작업과 유지보수가 매우 편하다   
- 동적타이핑, 객체의 멤버에 무한으로 접근가능하다.   
- 사용자가 모르는 사이 소스코드를 컴파일
 바이트(byte)코드로 변환하여 다음수행에 있어 빠른속도를 보여준다.   
- 모듈, 클래스, 객체와 같은 언어의 요소가 내부에서 접근 할수있고, 리플렉션을 이용한 기술을 사용가능   


## 파이썬으로 가능한일 ( _모듈 )
 1. 시스템 유틸리티 
 2. GUI 프로그래밍 
 3. C/C++ 결합
 4. 웹프로그래밍
 5. 수치 연산 프로그래밍 ( NumPy )
 6. 데이터 베이스 프로그래밍 ( Pickle )
 - Sybase,Infomix,Oracle,MySql,PostgreSQL 
 7. 데이터 분석 , 사물인터넷 ( Pandas_ 데이터 분석/ 라즈베리 파이 )

   


1.파이썬 기본 

- 단일 데이터 (단일 타입)
  > 수치형 : 정수, 부동소수, 진법....
  > 문자열 (연속이지만, 이쪽으로도 분류한다.)
           : 표현, 사용이유, 인덱싱, 슬라이싱, 포멧팅
            유니버셜함수 (주요 멤버함수) -> 가장 중요하기 때문
            전처리, 정규식 체크 (데이터 수집이후 등장)
    > 블린형 : -> 조건문 연결, 결론 flase상황만 기억한다. 
                    Flase:0,'',[],{},(),None 다 펄스

    -연속데이터 (시퀸스 타입)
    > 리스트: []   -> js의 배열과 동일, 순서가 존재, 값중복 ok
                    인덱서는 정방향/역방향(-1,-2,...)존재
    > 딕셔너리: {} -> js의 객체와 동일, 순서 x, 키:값
                     키는 중복되면 x, 값 중복 ok 
    > 튜플 : ()    -> 수정불가, 값을 묶는다!!(관계없는 데이터들을),
                     순서 ok, 정방향 / 역방향(확인)
    > 집합 : set()  -> 중복제거 후 리스트로 변환해서 처리 
                      교집합, 합집합, 차집합 => 느려서 !! => pandas에서 다 해결
                      
- 반복문,조건문,제어문,등등 => 코드 블럭을 이용 (:)
>if, while, for,..., break, continue
=> 절차적 프로그램 (동기식)
-------------------------------------------------------------------------
- 함수 종류
  => 내장함수, 외장함수, 사용자 지정함수, 
        람다표현 (데이터 분석시 등장) -> 처리속도나 메모리점유가 더 좋다.
  => 함수 지향성 프로그램 (동기식)
    -> 엔트리 포인트를 구성
--------------------------------------------------------------------------
- 클래스
    > 상속, 멤버 , 생성자 , 객체 생성
 - 모듈화 + 패키지
   > 모듈 만들기, 테스트 코드 배치, 모듈 가져오기, 패키지 사용
 - 예외처리
   > 풀코드 형태 확인
 => 객체 지향적 프로그램
   -> GUI 모드 구성, 파이썬 웹 구성시 모듈 부분으로 사용
 --------------------------------------------------------------
